{"version":3,"sources":["webpack:///./src/board.ts","webpack:///src/components/PuzzleBoard.vue","webpack:///./src/components/PuzzleBoard.vue?1d09","webpack:///./src/components/PuzzleBoard.vue","webpack:///src/App.vue","webpack:///./src/App.vue?efcd","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/assets/cat.webm","webpack:///./src/assets/robot.jpg"],"names":["SPACE","Direction","board","[object Object]","blocks","this","dy","length","dx","Error","Array","k","i","j","blankpos","p","Math","floor","x","y","idxs","idx","from","to","checkInRange","row","Left","Right","Below","Above","hamming","ans","len","manhattan","abs","col","swap","direction","swapAbove","swapBelow","swapLeft","swapRight","arr","subArr","push","createBoard2D","r","tmp","sub","result","PuzzleBoard","cat_default","a","src","robot_default","board2D","String","Boolean","_this","onResize","updateBlockPositions","update","sourceImg","currentTime","width","height","h","w","block","canvas","sourceX","sourceY","cellWidth","cellHeight","targetX","targetY","loop","isGoal","_this2","obj","easing","Tween_default","Easing","Quadratic","Out","onUpdate","start","_loop","concat","play","getBoundingClientRect","left","top","ev","focus","offsetWidth","offsetHeight","keyCode","components_PuzzleBoard","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","tabindex","on","keyup","$event","preventDefault","onKeyUp","click","onClickBoard","_v","_e","ref","style","getCanvasStyle","mousedown","mouseup","onClick","touchend","onTouchEnd","getSourceStyle","autoplay","muted","vidSrc","domProps","staticRenderFns","App","__webpack_require__","normalizeComponent","ssrContext","imgSrc","distance","selectortype_template_index_0_src_App","id","_s","autoResize","change","onPuzzleBoardChange","finish","onPuzzleBoardFinish","src_App","App_normalizeComponent","vue_esm","config","productionTip","el","components","template","module","exports"],"mappings":"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","file":"static/js/app.d280ef697f589cca4f7f.js","sourcesContent":["const SPACE = 0;\nvar Direction;\n(function (Direction) {\n    Direction[\"Above\"] = \"Above\";\n    Direction[\"Below\"] = \"Below\";\n    Direction[\"Left\"] = \"Left\";\n    Direction[\"Right\"] = \"Right\";\n})(Direction || (Direction = {}));\nclass Board {\n    constructor(blocks) {\n        this.dy = blocks.length;\n        // use the length of the top of blocks\n        this.dx = blocks[0].length;\n        if (this.dy < 2 || this.dx < 2) {\n            // TODO: could drop some edge cases\n            throw new Error('cannot initialize with the array which has less than 2 col/rows');\n        }\n        this.blocks = new Array(this.dx * this.dy);\n        let k = 0;\n        for (let i = 0; i < this.dy; i++) {\n            for (let j = 0; j < this.dx; j++) {\n                this.blocks[k] = blocks[i][j];\n                if (blocks[i][j] === SPACE) {\n                    this.blankpos = k;\n                }\n                k++;\n            }\n        }\n    }\n    row(p) {\n        return Math.floor(p / this.dx);\n    }\n    col(p) {\n        return p % this.dx;\n    }\n    dimensions() {\n        return {\n            x: this.dx,\n            y: this.dy\n        };\n    }\n    checkInRange(...idxs) {\n        for (let idx of idxs) {\n            if (this.blocks[idx] == null) {\n                throw new Error(`Index ${idx} not in range [0 .. ${this.blocks.length - 1}]`);\n            }\n        }\n    }\n    direction(from, to) {\n        this.checkInRange(from, to);\n        if (this.row(to) === this.row(from)) {\n            if (to % this.dx === (from % this.dx) - 1) {\n                return Direction.Left;\n            }\n            if (to % this.dx === (from % this.dx) + 1) {\n                return Direction.Right;\n            }\n        }\n        if (to === from + this.dx) {\n            return Direction.Below;\n        }\n        if (to === from - this.dx) {\n            return Direction.Above;\n        }\n        return null;\n    }\n    hamming() {\n        let hamming = 0;\n        for (let k = 0, ans = 1, len = this.blocks.length; k < len; k++, ans++) {\n            if (this.blocks[k] === SPACE) {\n                continue;\n            }\n            if (this.blocks[k] !== ans) {\n                hamming++;\n            }\n        }\n        return hamming;\n    }\n    manhattan() {\n        let manhattan = 0;\n        for (let k = 0, len = this.blocks.length; k < len; k++) {\n            if (this.blocks[k] === SPACE) {\n                continue;\n            }\n            const rowdiff = Math.abs(this.row(this.blocks[k] - 1) - this.row(k));\n            const coldiff = Math.abs(this.col(this.blocks[k] - 1) - this.col(k));\n            manhattan += rowdiff + coldiff;\n        }\n        return manhattan;\n    }\n    isGoal() {\n        for (let k = 0, len = this.blocks.length; k < len; k++) {\n            if (this.blocks[k] === SPACE) {\n                continue;\n            }\n            else if (this.blocks[k] !== k + 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    swap(blocks, from, to) {\n        this.checkInRange(from, to);\n        if (this.blocks[from] !== SPACE && this.blocks[to] !== SPACE) {\n            // cannot swap no-empty block\n            throw new Error('cannot swap non-space block');\n        }\n        [blocks[from], blocks[to]] = [blocks[to], blocks[from]];\n        this.blankpos = blocks[from] === SPACE ? from : to;\n        return this;\n    }\n    swapAbove(idx) {\n        return this.swap(this.blocks, idx, idx - this.dx);\n    }\n    swapBelow(idx) {\n        return this.swap(this.blocks, idx, idx + this.dx);\n    }\n    swapLeft(idx) {\n        return this.swap(this.blocks, idx, idx - 1);\n    }\n    swapRight(idx) {\n        return this.swap(this.blocks, idx, idx + 1);\n    }\n    slide(idx) {\n        this.checkInRange(idx);\n        switch (this.direction(idx, this.blankpos)) {\n            case Direction.Above:\n                return this.swapAbove(idx);\n            case Direction.Below:\n                return this.swapBelow(idx);\n            case Direction.Left:\n                return this.swapLeft(idx);\n            case Direction.Right:\n                return this.swapRight(idx);\n            default:\n                return this;\n        }\n    }\n    toArray2D() {\n        let k = 0;\n        const arr = [];\n        for (let i = 0; i < this.dy; i++) {\n            const subArr = [];\n            for (let j = 0; j < this.dx; j++, k++) {\n                subArr.push(this.blocks[k]);\n            }\n            arr.push(subArr);\n        }\n        return arr;\n    }\n}\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/board.ts\n// module id = null\n// module chunks = ","<template>\n  <div class=\"puzzle-board\"\n  tabindex=\"-1\"\n  @keyup.prevent=\"onKeyUp\"\n  @click=\"onClickBoard\"\n  >\n    <div class=\"puzzle-message\" v-if=\"isTouchNeeded\">Touch to start</div>\n    <canvas ref=\"puzzle-canvas\" class=\"puzzle-canvas\"\n    @click.prevent\n    @mousedown.prevent\n    @mouseup.prevent=\"onClick\"\n    @touchend.prevent=\"onTouchEnd\"\n    :style=\"getCanvasStyle()\"\n    :width=\"width * 2\"\n    :height=\"height\"\n    ></canvas>\n    <video ref=\"sourceImg\"\n    autoplay\n    loop\n    muted=\"true\"\n    :style=\"getSourceStyle()\"\n    :width=\"width\"\n    :height=\"height\"\n    :src=\"vidSrc\">No video</video>\n  </div>\n</template>\n\n<script>\nimport vid from '../assets/cat.webm'\nimport Board from '../board.ts'\nimport Vue from 'vue'\nimport posterSrc from '../assets/robot.jpg'\nimport debounce from 'lodash.debounce'\nimport TWEEN from 'tween.js'\n\nconst shuffle = (arr) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const r = Math.floor(Math.random() * (i + 1))\n    let tmp = arr[i]\n    arr[i] = arr[r]\n    arr[r] = tmp\n  }\n  return arr\n}\nconst createBoard2D = (dx, dy) => {\n  const len = dx * dy\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  shuffle(arr)\n  const result = []\n  for (let i = 0; i < dy; i++) {\n    const sub = []\n    for (let j = 0; j < dx; j++) {\n      sub.push(arr[dx * i + j])\n    }\n    result.push(sub)\n  }\n  return result\n}\n\nexport default {\n  name: 'PuzzleBoard',\n  data () {\n    this._blockPositions = []\n    return {\n      isTouchNeeded: true,\n      blocks: this.board.blocks,\n      isGoal: false,\n      manhattan: null,\n      hamming: null,\n      width: 0,\n      height: 0,\n      vidSrc: vid,\n      targetSrc: this.src,\n      posterSrc: posterSrc,\n      dx: this.board.dx,\n      dy: this.board.dx\n    }\n  },\n  props: {\n    board: {\n      type: Board,\n      default: () => {\n        const board2D = createBoard2D(3, 3)\n        return new Board(board2D)\n      }\n    },\n    src: {\n      type: String\n    },\n    showNumber: {\n      type: Boolean,\n      default: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    cellWidth () {\n      return this.width / this.dx\n    },\n    cellHeight () {\n      return this.height / this.dy\n    }\n  },\n  mounted () {\n    this.onResize()\n    this.updateBlockPositions()\n    window.addEventListener('resize', debounce(this.onResize.bind(this), 300))\n    this._lastRender = -1\n    this.$refs.sourceImg.addEventListener('play', () => {\n      this.isTouchNeeded = false\n    })\n    const loop = () => {\n      TWEEN.update()\n      if (this.$refs.sourceImg == null) {\n        requestAnimationFrame(loop)\n        return\n      }\n      const sourceImg = this.$refs.sourceImg\n      if (sourceImg.currentTime !== this._lastRender) {\n        this._lastRender = sourceImg.currentTime\n        // TODO: choose trimming strategy\n        // trims square area from the center of the source\n        const sourceCellSize = Math.min(sourceImg.videoWidth / this.dx, sourceImg.videoHeight / this.dy)\n        const marginX = (sourceImg.videoWidth - sourceCellSize * this.dx) / 2\n        const marginY = (sourceImg.videoHeight - sourceCellSize * this.dy) / 2\n        const canvas = this.$refs['puzzle-canvas']\n        const ctx = canvas.getContext('2d')\n        const sourceWidth = sourceCellSize * this.dx\n        const sourceHeight = sourceCellSize * this.dy\n        const w = this.width\n        const h = this.height\n\n        ctx.clearRect(0, 0, this.width, this.height)\n\n        // copies clipped video source to canvas for sync drawing\n        ctx.drawImage(sourceImg, marginX, marginY, sourceWidth, sourceHeight, w, 0, w, h)\n        for (let i = 0, len = this.blocks.length; i < len; i++) {\n          const block = this.blocks[i]\n          if (block === 0) {\n            continue\n          }\n          const row = this.board.row(block - 1)\n          const col = this.board.col(block - 1)\n          const sourceX = this.cellWidth * col + w\n          const sourceY = this.cellHeight * row\n          const pos = this._blockPositions[block]\n          if (pos == null) {\n            continue\n          }\n          const targetX = pos.x\n          const targetY = pos.y\n          ctx.drawImage(canvas,\n            sourceX, sourceY, this.cellWidth, this.cellHeight,\n            targetX, targetY, this.cellWidth, this.cellHeight)\n        }\n      }\n      requestAnimationFrame(loop)\n    }\n    this.$nextTick(loop)\n  },\n  watch: {\n    board () {\n      this.blocks = this.board.blocks\n      this.dx = this.board.dx\n      this.dy = this.board.dy\n    },\n    blocks () {\n      this.updateBlockPositions()\n      this.isGoal = this.board.isGoal()\n      this.manhattan = this.board.manhattan()\n      this.hamming = this.board.hamming()\n      this.$emit('change', {\n        blocks: this.blocks,\n        isGoal: this.isGoal,\n        distance: this.manhattan\n      })\n    },\n    isGoal () {\n      if (this.isGoal) {\n        this.$emit('finish')\n      }\n    }\n  },\n  methods: {\n    updateBlockPositions () {\n      for (let i = 0, len = this.blocks.length; i < len; i++) {\n        const b = this.blocks[i]\n        const col = this.board.col(i)\n        const row = this.board.row(i)\n        const x = this.cellWidth * col\n        const y = this.cellHeight * row\n        const from = this._blockPositions[b] || {x: 0, y: 0}\n        if (this._blockPositions[b] == null) {\n          this._blockPositions[b] = from\n        }\n        if (from.x - x === 0 && from.y - y === 0) {\n          continue\n        }\n        const obj = {x: from.x, y: from.y}\n        new TWEEN.Tween(obj)\n          .to({x, y}, 200)\n          .easing(TWEEN.Easing.Quadratic.Out)\n          .onUpdate(() => {\n            this._blockPositions[b].x = obj.x\n            this._blockPositions[b].y = obj.y\n          })\n          .start()\n      }\n    },\n    getCanvasStyle () {\n      return {\n        left: this.isGoal ? '-100%' : 0\n      }\n    },\n    getSourceStyle () {\n      return {\n        display: 'none'\n      }\n    },\n    slide (idx) {\n      this.board.slide(idx)\n      Vue.set(this, 'blocks', this.board.blocks.concat())\n    },\n    onTouchEnd (event) {\n      if (this.isTouchNeeded) {\n        this.$refs.sourceImg.play()\n        this.isTouchNeeded = false\n      }\n      const touch = event.changedTouches[0]\n      const rect = this.$el.getBoundingClientRect()\n      const ev = {\n        offsetX: touch.clientX - rect.left,\n        offsetY: touch.clientY - rect.top\n      }\n      this.onClick(ev)\n    },\n    onClick (event) {\n      const col = Math.floor(event.offsetX / this.cellWidth)\n      const row = Math.floor(event.offsetY / this.cellHeight)\n      const idx = row * this.dx + col\n      this.slide(idx)\n    },\n    onClickBoard () {\n      this.$el.focus()\n    },\n    onResize () {\n      const w = this.$el.offsetWidth\n      const h = this.$el.offsetHeight\n      if (this.autoResize) {\n        this.width = w\n        this.height = h\n      }\n    },\n    onKeyUp (event) {\n      const bp = this.board.blankpos\n      const len = this.blocks.length\n      switch (event.keyCode) {\n        case 37:\n          if (bp + 1 < len) {\n            this.slide(bp + 1)\n          }\n          break\n        case 38:\n          if (bp + this.dx < len) {\n            this.slide(bp + this.dx)\n          }\n          break\n        case 39:\n          if (bp - 1 >= 0) {\n            this.slide(bp - 1)\n          }\n          break\n        case 40:\n          if (bp - this.dx >= 0) {\n            this.slide(bp - this.dx)\n          }\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#sourceImg,#targetImg {\n  width: 300;\n  height: 300;\n}\n.puzzle-canvas {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  top: 0;\n  left: 0;\n  width: 200%;\n  height: 100%;\n}\n.puzzle-message {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.puzzle-board {\n  position: absolute;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n.tile-number {\n  position: absolute;\n  text-shadow: 1px 1px 0 #222;\n  color: #FAFAFA;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/PuzzleBoard.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"puzzle-board\",attrs:{\"tabindex\":\"-1\"},on:{\"keyup\":function($event){$event.preventDefault();_vm.onKeyUp($event)},\"click\":_vm.onClickBoard}},[(_vm.isTouchNeeded)?_c('div',{staticClass:\"puzzle-message\"},[_vm._v(\"Touch to start\")]):_vm._e(),_vm._v(\" \"),_c('canvas',{ref:\"puzzle-canvas\",staticClass:\"puzzle-canvas\",style:(_vm.getCanvasStyle()),attrs:{\"width\":_vm.width * 2,\"height\":_vm.height},on:{\"click\":function($event){$event.preventDefault();},\"mousedown\":function($event){$event.preventDefault();},\"mouseup\":function($event){$event.preventDefault();_vm.onClick($event)},\"touchend\":function($event){$event.preventDefault();_vm.onTouchEnd($event)}}}),_vm._v(\" \"),_c('video',{ref:\"sourceImg\",style:(_vm.getSourceStyle()),attrs:{\"autoplay\":\"\",\"loop\":\"\",\"muted\":\"true\",\"width\":_vm.width,\"height\":_vm.height,\"src\":_vm.vidSrc},domProps:{\"muted\":true}},[_vm._v(\"No video\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-89715d3a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/PuzzleBoard.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-89715d3a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PuzzleBoard.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PuzzleBoard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PuzzleBoard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-89715d3a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./PuzzleBoard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-89715d3a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/PuzzleBoard.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <div class=\"header\">\n      <span class=\"header-item title\">Vue-8-Puzzle</span>\n      <span class=\"header-item distance\"> Distance: {{distance}} </span>\n      <span class=\"header-item\">\n        <template v-if=\"isGoal\">\n          finish!!\n        </template>\n      </span>\n    </div>\n    <div class=\"container\">\n      <puzzle-board :src=\"imgSrc\"\n      @change=\"onPuzzleBoardChange\"\n      @finish=\"onPuzzleBoardFinish\"\n      :autoResize=\"autoResize\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PuzzleBoard from './components/PuzzleBoard'\nimport imgSrc from './assets/robot.jpg'\n\nexport default {\n  name: 'App',\n  components: {\n    PuzzleBoard\n  },\n  data () {\n    return {\n      imgSrc,\n      distance: null,\n      isGoal: false,\n      autoResize: true\n    }\n  },\n  methods: {\n    onPuzzleBoardFinish () {\n      this.isGoal = true\n    },\n    onPuzzleBoardChange (payload) {\n      this.distance = payload.distance\n    }\n  }\n}\n</script>\n\n<style>\nhtml,body {\n  margin: 0;\n  padding: 0;\n}\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.header {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  font-size: 1.4em;\n  position: absolute;\n  width: 100%;\n  height: 60px;\n  color: #FAFAFA;\n  background-color: #283593;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n}\n.header-item {\n  flex-grow: 1;\n}\n.title {\n  font-weight: bold;\n}\n.container {\n  position: absolute;\n  top: calc(50% + 30px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 2px 4px rgba(0,0,0,0.16), 0 2px 4px rgba(0,0,0,0.23);\n  width: 100%;\n  height: calc(100% - 60px);\n  margin: 0px;\n  padding: 0px;\n  max-width: 600px;\n  max-height: 600px;\n  background-color: #DDD;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"header\"},[_c('span',{staticClass:\"header-item title\"},[_vm._v(\"Vue-8-Puzzle\")]),_vm._v(\" \"),_c('span',{staticClass:\"header-item distance\"},[_vm._v(\" Distance: \"+_vm._s(_vm.distance)+\" \")]),_vm._v(\" \"),_c('span',{staticClass:\"header-item\"},[(_vm.isGoal)?[_vm._v(\"\\n        finish!!\\n      \")]:_vm._e()],2)]),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('puzzle-board',{attrs:{\"src\":_vm.imgSrc,\"autoResize\":_vm.autoResize},on:{\"change\":_vm.onPuzzleBoardChange,\"finish\":_vm.onPuzzleBoardFinish}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-eb422f1c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb422f1c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eb422f1c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = __webpack_public_path__ + \"static/media/cat.ae00415.webm\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cat.webm\n// module id = wh8N\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/robot.ca73761.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/robot.jpg\n// module id = xkHn\n// module chunks = 1"],"sourceRoot":""}